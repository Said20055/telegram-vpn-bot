import time
from aiogram import Router, F, Bot, types
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.types import Message, CallbackQuery
from aiogram.utils.keyboard import InlineKeyboardBuilder

from loader import logger, config
from database import requests as db
from tgbot.keyboards.inline import close_support_chat_keyboard, main_menu_keyboard
from tgbot.states.support_states import SupportFSM
from tgbot.middlewares.support_timeout import SupportTimeoutMiddleware

support_router = Router()
support_router.message.middleware(SupportTimeoutMiddleware())
support_router.callback_query.middleware(SupportTimeoutMiddleware())



# =============================================================================
# --- –ë–õ–û–ö 1: –í–•–û–î –í –†–ï–ñ–ò–ú –ü–û–î–î–ï–†–ñ–ö–ò ---
# =============================================================================

def support_intro_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–æ–π '–ù–∞—á–∞—Ç—å –¥–∏–∞–ª–æ–≥'."""
    builder = InlineKeyboardBuilder()
    builder.button(text="‚úçÔ∏è –ù–∞—á–∞—Ç—å –¥–∏–∞–ª–æ–≥ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π", callback_data="confirm_start_support")
    builder.button(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="back_to_main_menu")
    builder.adjust(1)
    return builder.as_markup()

async def show_support_intro(event: types.Message | types.CallbackQuery):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–¥–¥–µ—Ä–∂–∫–∏."""
    text = (
        "üí¨ <b>–ü–æ–¥–¥–µ—Ä–∂–∫–∞</b>\n\n"
        "–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã, –≤—ã –º–æ–∂–µ—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞—à–µ–π —Å–ª—É–∂–±–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏.\n\n"
        "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –¥–∏–∞–ª–æ–≥."
    )
    reply_markup = support_intro_keyboard()

    if isinstance(event, types.CallbackQuery):
        await event.message.edit_text(text, reply_markup=reply_markup)
    else:
        await event.answer(text, reply_markup=reply_markup)

@support_router.message(Command("support"))
async def support_command_handler(message: types.Message):
    """–•–µ–Ω–¥–ª–µ—Ä –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /support."""
    await show_support_intro(message)

@support_router.callback_query(F.data == "support_chat_start")
async def support_callback_handler(call: types.CallbackQuery):
    """–•–µ–Ω–¥–ª–µ—Ä –¥–ª—è –∫–Ω–æ–ø–∫–∏ '–ü–æ–¥–¥–µ—Ä–∂–∫–∞' –∏–∑ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é."""
    await call.answer()
    await show_support_intro(call)


# =============================================================================
# --- –ë–õ–û–ö 2: –£–ü–†–ê–í–õ–ï–ù–ò–ï –î–ò–ê–õ–û–ì–û–ú (–î–õ–Ø –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø) ---
# =============================================================================

@support_router.callback_query(F.data == "confirm_start_support")
async def start_support_chat_confirmed(call: types.CallbackQuery, state: FSMContext, bot: Bot):
    """–°–æ–∑–¥–∞–µ—Ç —Ç–µ–º—É –∏ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ä–µ–∂–∏–º —á–∞—Ç–∞ –ø–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è."""
    await state.clear()
    user_id = call.from_user.id
    user = db.get_user(user_id)

    if user and user.support_topic_id:
        text = "–í—ã —É–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ —á–∞—Ç–µ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π. –ü—Ä–æ—Å—Ç–æ –ø—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∏–∂–µ."
    else:
        try:
            topic = await bot.create_forum_topic(
                chat_id=config.tg_bot.support_chat_id,
                name=f"–¢–∏–∫–µ—Ç #{user_id} | @{call.from_user.username or 'NoUsername'}"
            )
            db.set_user_support_topic(user_id, topic.message_thread_id)
            await bot.send_message(
                chat_id=config.tg_bot.support_chat_id,
                message_thread_id=topic.message_thread_id,
                text=f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <b>{call.from_user.full_name}</b> (ID: <code>{user_id}</code>) –æ—Ç–∫—Ä—ã–ª –Ω–æ–≤—ã–π —Ç–∏–∫–µ—Ç."
            )
            text = "–í—ã –Ω–∞—á–∞–ª–∏ –¥–∏–∞–ª–æ–≥ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π. –û–ø–∏—à–∏—Ç–µ –≤–∞—à—É –ø—Ä–æ–±–ª–µ–º—É, –∏ –≤–∞–º —Å–∫–æ—Ä–æ –æ—Ç–≤–µ—Ç—è—Ç."
        except Exception as e:
            logger.error(f"Failed to create support topic for user {user_id}: {e}", exc_info=True)
            await call.answer("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —á–∞—Ç —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.", show_alert=True)
            return

    await state.set_state(SupportFSM.in_chat)
    await state.update_data(last_activity_time=time.time())
    
    await call.message.edit_text(text, reply_markup=close_support_chat_keyboard())
    await call.answer()


@support_router.callback_query(F.data == "support_chat_close", SupportFSM.in_chat)
async def close_support_chat_by_user(call: types.CallbackQuery, state: FSMContext, bot: Bot):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–∫—Ä—ã—Ç–∏–µ –¥–∏–∞–ª–æ–≥–∞ —Å–æ —Å—Ç–æ—Ä–æ–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    await state.clear()
    user = db.get_user(call.from_user.id)
    if user and user.support_topic_id:
        await bot.send_message(
            chat_id=config.tg_bot.support_chat_id,
            message_thread_id=user.support_topic_id,
            text="üí¨ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–≤–µ—Ä—à–∏–ª –¥–∏–∞–ª–æ–≥."
        )
    db.clear_user_support_topic(call.from_user.id)
    await call.message.edit_text(
        "‚úÖ <b>–î–∏–∞–ª–æ–≥ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω.</b>\n\n–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.", 
        reply_markup=main_menu_keyboard()
    )


@support_router.message(SupportFSM.in_chat, Command("cancel"))
async def cancel_support_from_command(message: types.Message, state: FSMContext, bot: Bot):
    """–ü–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤—ã–π—Ç–∏ –∏–∑ —á–∞—Ç–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∫–æ–º–∞–Ω–¥–æ–π /cancel."""
    # –°–æ–∑–¥–∞–µ–º —Ñ–µ–π–∫–æ–≤—ã–π –∫–æ–ª–±—ç–∫, —á—Ç–æ–±—ã –≤—ã–∑–≤–∞—Ç—å –ª–æ–≥–∏–∫—É –∫–Ω–æ–ø–∫–∏ "–ó–∞–≤–µ—Ä—à–∏—Ç—å –¥–∏–∞–ª–æ–≥"
    fake_call = types.CallbackQuery(id="fake_call", from_user=message.from_user, chat_instance="", message=message)
    await close_support_chat_by_user(fake_call, state, bot)
    await message.delete() # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ /cancel


@support_router.message(SupportFSM.in_chat)
async def process_message_in_support_chat(message: Message, state: FSMContext, bot: Bot):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –Ω–∞—Ö–æ–¥—è—â–µ–≥–æ—Å—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ —á–∞—Ç–∞ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π.
    –ï—Å–ª–∏ —ç—Ç–æ –∫–æ–º–∞–Ω–¥–∞ - –≤—ã—Ö–æ–¥–∏—Ç –∏–∑ —á–∞—Ç–∞.
    –ï—Å–ª–∏ —ç—Ç–æ –æ–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ - –ø–µ—Ä–µ—Å—ã–ª–∞–µ—Ç –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.
    """
    
    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥–æ–π
    if message.text and message.text.startswith('/'):
        # –ï—Å–ª–∏ —ç—Ç–æ –∫–æ–º–∞–Ω–¥–∞, –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Ä–µ–∂–∏–º–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏
        await state.clear()
        await message.answer(
        "<b>–í—ã –≤—ã—à–ª–∏ –∏–∑ —Ä–µ–∂–∏–º–∞ —á–∞—Ç–∞ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π.</b>\n\n"
        "–í–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ –Ω–µ –±—ã–ª–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–µ –µ—â–µ —Ä–∞–∑, —á—Ç–æ–±—ã –±–æ—Ç –º–æ–≥ –µ–µ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å.",
        reply_markup=main_menu_keyboard()
    )

        return # –ó–∞–≤–µ—Ä—à–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ö–µ–Ω–¥–ª–µ—Ä–∞

    # 2. –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ –∫–æ–º–∞–Ω–¥–∞, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∫ –æ–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏
    user = db.get_user(message.from_user.id)
    if not user or not user.support_topic_id:
        await state.clear()
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ —á–∞—Ç —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –∑–∞–Ω–æ–≤–æ.", reply_markup=main_menu_keyboard())
        return

    # –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É
    await message.forward(
        chat_id=config.tg_bot.support_chat_id,
        message_thread_id=user.support_topic_id
    )


# =============================================================================
# --- –ë–õ–û–ö 3: –û–ë–†–ê–ë–û–¢–ö–ê –û–¢–í–ï–¢–û–í –ò–ó –ì–†–£–ü–ü–´ –ü–û–î–î–ï–†–ñ–ö–ò (–î–õ–Ø –ê–î–ú–ò–ù–ê) ---
# =============================================================================

@support_router.message(F.chat.id == config.tg_bot.support_chat_id, F.message_thread_id, Command("close"))
async def admin_close_topic_command(message: types.Message, bot: Bot):
    """–ó–∞–∫—Ä—ã–≤–∞–µ—Ç —Ç–∏–∫–µ—Ç –ø–æ –∫–æ–º–∞–Ω–¥–µ /close –æ—Ç –∞–¥–º–∏–Ω–∞."""
    user_to_reply = db.get_user_by_support_topic(message.message_thread_id)
    if not user_to_reply:
        await message.reply("–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —ç—Ç–æ–π —Ç–µ–º—ã.")
        return

    try:
        await bot.send_message(
            user_to_reply.user_id, 
            "–û–ø–µ—Ä–∞—Ç–æ—Ä –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∑–∞–≤–µ—Ä—à–∏–ª –≤–∞—à –¥–∏–∞–ª–æ–≥. –ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –Ω–æ–≤—ã–µ –≤–æ–ø—Ä–æ—Å—ã, –≤—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ –æ—Ç–∫—Ä—ã—Ç—å –Ω–æ–≤—ã–π —Ç–∏–∫–µ—Ç.\n"
            "–í—ã –±—ã–ª–∏ –≤–æ–∑–≤—Ä–∞—â–µ–Ω—ã –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é!",
            reply_markup=main_menu_keyboard()
        )
    except Exception as e:
        logger.warning(f"Could not send '/close' notification to user {user_to_reply.user_id}: {e}")
    
    db.clear_user_support_topic(user_to_reply.user_id)
    await bot.close_forum_topic(config.tg_bot.support_chat_id, message.message_thread_id)
    await message.reply("‚úÖ –¢–∏–∫–µ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–∫—Ä—ã—Ç.")


@support_router.message(F.chat.id == config.tg_bot.support_chat_id, F.message_thread_id)
async def admin_reply_to_user_from_topic(message: types.Message, bot: Bot):
    """
    –ü–µ—Ä–µ—Å—ã–ª–∞–µ—Ç –æ—Ç–≤–µ—Ç –∞–¥–º–∏–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å –ø—Ä–∏–ø–∏—Å–∫–æ–π "–û—Ç–≤–µ—Ç –æ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏".
    """
    # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç —Å–∞–º–æ–≥–æ –±–æ—Ç–∞
    if message.from_user.id == bot.id:
        return

    user_to_reply = db.get_user_by_support_topic(message.message_thread_id)
    if not user_to_reply:
        return

    try:
        # –§–æ—Ä–º–∏—Ä—É–µ–º –Ω–∞—à—É "—à–∞–ø–∫—É" –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è
        header = "üí¨ <b>–û—Ç–≤–µ—Ç –æ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏:</b>\n\n"
        
        # 1. –ï—Å–ª–∏ –∞–¥–º–∏–Ω –æ—Ç–ø—Ä–∞–≤–∏–ª —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç
        if message.text:
            # –ü—Ä–æ—Å—Ç–æ —Å–æ–µ–¥–∏–Ω—è–µ–º –Ω–∞—à—É —à–∞–ø–∫—É –∏ —Ç–µ–∫—Å—Ç –∞–¥–º–∏–Ω–∞
            await bot.send_message(
                chat_id=user_to_reply.user_id,
                text=header + message.text,
                reply_markup=message.reply_markup # –ö–æ–ø–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏, –µ—Å–ª–∏ –æ–Ω–∏ –±—ã–ª–∏
            )
            
        # 2. –ï—Å–ª–∏ –∞–¥–º–∏–Ω –æ—Ç–ø—Ä–∞–≤–∏–ª —Ñ–æ—Ç–æ, –≤–∏–¥–µ–æ, –¥–æ–∫—É–º–µ–Ω—Ç –∏ —Ç.–¥. —Å –ø–æ–¥–ø–∏—Å—å—é (caption)
        elif message.caption:
            # –ö–æ–ø–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, –Ω–æ –∏–∑–º–µ–Ω—è–µ–º –µ–≥–æ –ø–æ–¥–ø–∏—Å—å, –¥–æ–±–∞–≤–ª—è—è –Ω–∞—à—É —à–∞–ø–∫—É
            await message.copy_to(
                chat_id=user_to_reply.user_id,
                caption=header + message.caption,
                # caption_entities –Ω—É–∂–Ω–æ –æ—á–∏—Å—Ç–∏—Ç—å, —Ç.–∫. –º—ã –º–µ–Ω—è–µ–º —Ç–µ–∫—Å—Ç.
                # Aiogram —Å–∞–º —Å–æ–∑–¥–∞—Å—Ç –Ω–æ–≤—ã–µ entities –¥–ª—è –Ω–∞—à–µ–≥–æ HTML
            )
            
        # 3. –ï—Å–ª–∏ –∞–¥–º–∏–Ω –æ—Ç–ø—Ä–∞–≤–∏–ª –º–µ–¥–∏–∞ –ë–ï–ó –ø–æ–¥–ø–∏—Å–∏
        else:
            # –°–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞—à—É "—à–∞–ø–∫—É" –æ—Ç–¥–µ–ª—å–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
            await bot.send_message(
                chat_id=user_to_reply.user_id,
                text=header
            )
            # –ê –∑–∞—Ç–µ–º –∫–æ–ø–∏—Ä—É–µ–º –º–µ–¥–∏–∞—Ñ–∞–π–ª –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
            await message.copy_to(chat_id=user_to_reply.user_id)

    except Exception as e:
        logger.error(f"Failed to send admin's reply to user {user_to_reply.user_id}: {e}", exc_info=True)
        await message.reply(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é. –û—à–∏–±–∫–∞: {e}")