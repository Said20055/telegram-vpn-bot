# tgbot/handlers/admin/main.py
import asyncio
from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import Message, CallbackQuery
from marzban.init_client import MarzClientCache
from tgbot.filters.admin import IsAdmin
from tgbot.keyboards.inline import admin_main_menu_keyboard
from database import requests as db 
from aiogram.utils.keyboard import InlineKeyboardBuilder

admin_main_router = Router()
admin_main_router.message.filter(IsAdmin()) # –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä –∫–æ –≤—Å–µ–º —Ö–µ–Ω–¥–ª–µ—Ä–∞–º –≤ —ç—Ç–æ–º —Ä–æ—É—Ç–µ—Ä–µ

@admin_main_router.message(Command("admin"))
async def admin_start(message: Message):
    await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å!", reply_markup=admin_main_menu_keyboard())

@admin_main_router.callback_query(F.data == "admin_main_menu")
async def admin_main_menu(call: CallbackQuery):
    await call.message.edit_text("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å!", reply_markup=admin_main_menu_keyboard())

@admin_main_router.callback_query(F.data == "admin_stats")
async def admin_stats_handler(call: CallbackQuery, marzban: MarzClientCache):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å —Ä–∞–∑–±–∏–≤–∫–æ–π –ø–æ —É–∑–ª–∞–º."""
    await call.answer("–°–æ–±–∏—Ä–∞—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å —Å–µ—Ä–≤–µ—Ä–æ–≤...")
    
    # --- 1. –°–Ω–∞—á–∞–ª–∞ –≤—ã–ø–æ–ª–Ω—è–µ–º –≤—Å–µ –°–ò–ù–•–†–û–ù–ù–´–ï –∑–∞–ø—Ä–æ—Å—ã –∫ –Ω–∞—à–µ–π –ë–î ---
    total_users = db.count_all_users()
    active_subs = db.count_active_subscriptions()
    first_payments_total = db.count_users_with_first_payment()
    
    # --- 2. –ó–∞—Ç–µ–º –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ –≤—ã–ø–æ–ª–Ω—è–µ–º –≤—Å–µ –ê–°–ò–ù–•–†–û–ù–ù–´–ï –∑–∞–ø—Ä–æ—Å—ã –∫ API Marzban ---
    # –¢–µ–ø–µ—Ä—å –º—ã –ø–µ—Ä–µ–¥–∞–µ–º –≤ gather —É–∂–µ –≤—ã–∑–≤–∞–Ω–Ω—ã–µ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
    system_stats, nodes = await asyncio.gather(
        marzban.get_system_stats(),
        marzban.get_nodes()
    )
    
    # --- 3. –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è (—ç—Ç–æ—Ç –±–ª–æ–∫ –æ—Å—Ç–∞–µ—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π) ---
    online_total = system_stats.get("online_clients", "–Ω/–¥")
    
    text_parts = [
        "üìä <b>–†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</b>\n",
        "<b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:</b>",
        f"‚îú –í—Å–µ–≥–æ –≤ –±–æ—Ç–µ: <b>{total_users}</b>",
        f"‚îî –ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫: <b>{active_subs}</b>",
        "",
        "<b>–ö–æ–Ω–≤–µ—Ä—Å–∏—è:</b>",
        f"‚îî –í—Å–µ–≥–æ –ø–µ—Ä–≤—ã—Ö –æ–ø–ª–∞—Ç: <b>{first_payments_total}</b>",
        "",
        "<b>–°–µ—Ä–≤–µ—Ä—ã Marzban:</b>",
        f"‚îú üü¢ –û–±—â–∏–π –æ–Ω–ª–∞–π–Ω: <b>{online_total}</b>",
    ]
    
    if nodes:
        # –í –Ω–æ–≤—ã—Ö –≤–µ—Ä—Å–∏—è—Ö Marzban –æ–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ù–ï –≤–∫–ª—é—á–∞–µ—Ç –æ–Ω–ª–∞–π–Ω —Ö–æ—Å—Ç–∞
        # –ï–≥–æ –Ω—É–∂–Ω–æ –ø–æ–ª—É—á–∞—Ç—å –æ—Ç–¥–µ–ª—å–Ω–æ –∏–ª–∏ —Å—É–º–º–∏—Ä–æ–≤–∞—Ç—å
        host_online = 0
        nodes_online_list = []
        for i, node in enumerate(nodes):
            node_name = node.get('name', f"–£–∑–µ–ª #{i+1}")
            node_online = node.get('users_online', 0)
            
            # –ï—Å–ª–∏ —É —É–∑–ª–∞ –Ω–µ—Ç `node_id`, —ç—Ç–æ, —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ, –æ—Å–Ω–æ–≤–Ω–æ–π —Ö–æ—Å—Ç
            if node.get('id') is None or node.get('id') == 0: 
                 host_online = node_online
            else:
                 nodes_online_list.append(f"üåê {node_name}: <b>{node_online}</b>")

        text_parts.append(f"‚îÇ  ‚îú‚îÄ üñ•Ô∏è –û—Å–Ω–æ–≤–Ω–æ–π —Å–µ—Ä–≤–µ—Ä: <b>{host_online}</b>")
        
        for i, node_line in enumerate(nodes_online_list):
            prefix = "‚îÇ  ‚îî‚îÄ" if i == len(nodes_online_list) - 1 else "‚îÇ  ‚îú‚îÄ"
            text_parts.append(f"{prefix} {node_line}")
    
    text = "\n".join(text_parts)

    # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –æ—Å—Ç–∞–µ—Ç—Å—è —Ç–∞–∫–æ–π –∂–µ
    stats_kb = InlineKeyboardBuilder()
    stats_kb.button(text="üîÑ –û–±–Ω–æ–≤–∏—Ç—å", callback_data="admin_stats")
    stats_kb.button(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="admin_main_menu")
    stats_kb.adjust(1)
    
    await call.message.edit_text(text, reply_markup=stats_kb.as_markup())