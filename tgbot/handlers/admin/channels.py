# tgbot/handlers/admin/channels.py
from aiogram import Router, F, Bot, types
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.types import Message, CallbackQuery

from tgbot.filters.admin import IsAdmin
from database import requests as db

admin_channels_router = Router()
admin_channels_router.message.filter(IsAdmin())
admin_channels_router.callback_query.filter(IsAdmin())

class AdminChannelsFSM(StatesGroup):
    add_channel_id = State()
    delete_channel_id = State()

# --- –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–∞–Ω–∞–ª–∞–º–∏ ---
@admin_channels_router.callback_query(F.data == "admin_channels_menu")
async def channels_menu(call: CallbackQuery):
    channels = await db.get_all_channels()
    text = "<b>üì¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–æ–π</b>\n\n–¢–µ–∫—É—â–∏–µ –∫–∞–Ω–∞–ª—ã:\n"
    if not channels:
        text += "<i>–°–ø–∏—Å–æ–∫ –ø—É—Å—Ç.</i>"
    else:
        for ch in channels:
            text += f"‚Ä¢ <code>{ch.channel_id}</code> - <a href='{ch.invite_link}'>{ch.title}</a>\n"
    
    # --- –°–æ–∑–¥–∞–π—Ç–µ —ç—Ç—É –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤ keyboards/inline.py ---
    from tgbot.keyboards.inline import manage_channels_keyboard
    await call.message.edit_text(text, reply_markup=manage_channels_keyboard(), disable_web_page_preview=True)

# --- –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞ ---
@admin_channels_router.callback_query(F.data == "admin_add_channel")
async def add_channel_start(call: CallbackQuery, state: FSMContext):
    await call.message.edit_text(
        "<b>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞</b>\n\n"
        "1. –î–æ–±–∞–≤—å—Ç–µ –±–æ—Ç–∞ –≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –Ω—É–∂–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞.\n"
        "2. –ü–µ—Ä–µ—à–ª–∏—Ç–µ —Å—é–¥–∞ –ª—é–±–æ–π –ø–æ—Å—Ç –∏–∑ —ç—Ç–æ–≥–æ –∫–∞–Ω–∞–ª–∞."
    )
    await state.set_state(AdminChannelsFSM.add_channel_id)

@admin_channels_router.message(AdminChannelsFSM.add_channel_id, F.forward_from_chat)
async def add_channel_finish(message: Message, state: FSMContext, bot: Bot):
    chat = message.forward_from_chat
    try:
        # –ü—ã—Ç–∞–µ–º—Å—è —Å–æ–∑–¥–∞—Ç—å –ø—Ä–∏–≤–∞—Ç–Ω—É—é —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞–Ω–∞–ª
        invite_link = await bot.create_chat_invite_link(chat.id)
        
        await db.add_channel(
            channel_id=chat.id,
            title=chat.title,
            invite_link=invite_link.invite_link
        )
        await message.answer(f"‚úÖ –ö–∞–Ω–∞–ª ¬´{chat.title}¬ª (<code>{chat.id}</code>) —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω.")
    except Exception as e:
        await message.answer(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∫–∞–Ω–∞–ª–∞: {e}\n\n"
                             "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –±–æ—Ç —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –∫–∞–Ω–∞–ª–∞ —Å –ø—Ä–∞–≤–æ–º —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å–Ω—ã—Ö —Å—Å—ã–ª–æ–∫.")
    
    await state.clear()
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –º–µ–Ω—é
    await channels_menu(message) # –ù—É–∂–Ω–∞ –∞–¥–∞–ø—Ç–∞—Ü–∏—è –ø–æ–¥ message

# --- –£–¥–∞–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞ ---
@admin_channels_router.callback_query(F.data == "admin_delete_channel")
async def delete_channel_start(call: CallbackQuery, state: FSMContext):
    await call.message.edit_text("<b>–£–¥–∞–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞</b>\n\n–í–≤–µ–¥–∏—Ç–µ ID –∫–∞–Ω–∞–ª–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:")
    await state.set_state(AdminChannelsFSM.delete_channel_id)

@admin_channels_router.message(AdminChannelsFSM.delete_channel_id)
async def delete_channel_finish(message: Message, state: FSMContext):
    try:
        channel_id = int(message.text)
        success = await db.delete_channel(channel_id)
        if success:
            await message.answer(f"‚úÖ –ö–∞–Ω–∞–ª <code>{channel_id}</code> —É–¥–∞–ª–µ–Ω.")
        else:
            await message.answer(f"‚ö†Ô∏è –ö–∞–Ω–∞–ª <code>{channel_id}</code> –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ.")
    except (ValueError, TypeError):
        await message.answer("‚ùå –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID –∫–∞–Ω–∞–ª–∞ (—á–∏—Å–ª–æ).")

    await state.clear()
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –º–µ–Ω—é
    await channels_menu(message) # –ù—É–∂–Ω–∞ –∞–¥–∞–ø—Ç–∞—Ü–∏—è –ø–æ–¥ message