from aiogram import Router, F, Bot
from aiogram.filters import CommandStart, Command, CommandObject
from aiogram.types import Message, CallbackQuery
from aiogram.exceptions import TelegramBadRequest
from aiogram.fsm.context import FSMContext
# --- –ò–º–ø–æ—Ä—Ç—ã ---
from loader import logger
from database import requests as db
from marzban.init_client import MarzClientCache
from tgbot.keyboards.inline import channels_subscribe_keyboard, main_menu_keyboard
from tgbot.services.subscription import check_subscription

trial_sub_router = Router()


async def give_trial_subscription(user_id: int, bot: Bot, marzban: MarzClientCache, chat_id: int):
    """
    –°–æ–∑–¥–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ 3x-ui –Ω–∞ 14 –¥–Ω–µ–π, –æ–±–Ω–æ–≤–ª—è–µ—Ç –ë–î –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ.
    –ü—Ä–∏–Ω–∏–º–∞–µ—Ç —Ç–æ–ª—å–∫–æ ID, —á—Ç–æ–±—ã –±—ã—Ç—å –ø–æ–ª–Ω–æ—Å—Ç—å—é –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ–π.
    """
    trial_days = 7
    marzban_username = f"user_{user_id}"
    
    try:
        # 1. –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ø–∞–Ω–µ–ª–∏ 3x-ui
        result_uuid = await marzban.modify_user(username=marzban_username, expire_days=trial_days)
        if not result_uuid:
            raise Exception("MarzClient failed to create user.")

        logger.info(f"Successfully created 3x-ui user '{marzban_username}' with {trial_days} trial days for user {user_id}.")

        # 2. –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞—à—É –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        await db.update_user_marzban_username(user_id, marzban_username)
        await db.extend_user_subscription(user_id, days=trial_days)
        await db.set_user_trial_received(user_id)

        # 3. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–∑–¥—Ä–∞–≤–∏—Ç–µ–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        await bot.send_message(
            chat_id=chat_id,
            text=(
                f"üéâ <b>–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!</b>\n\n"
                f"–í—ã –ø–æ–ª—É—á–∏–ª–∏ –ø—Ä–æ–±–Ω—É—é –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ <b>{trial_days} –¥–Ω–µ–π</b>.\n"
                "–ß—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤–∞—à—É –ø–æ–¥–ø–∏—Å–∫—É, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É ¬´üë§ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å¬ª –≤ –º–µ–Ω—é –Ω–∏–∂–µ."
            ),
            reply_markup=main_menu_keyboard()
        )

    except Exception as e:
        logger.error(f"Failed to give trial subscription to user {user_id}: {e}", exc_info=True)
        await bot.send_message(chat_id, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –≤–∞—à–µ–≥–æ –ø—Ä–æ–±–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.")
        

@trial_sub_router.callback_query(F.data == "start_trial_process")
async def start_trial_process_handler(call: CallbackQuery, bot: Bot, marzban:  MarzClientCache):
    """
    –ó–∞–ø—É—Å–∫–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–±–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É.
    –í–∫–ª—é—á–∞–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ –ø–æ–≤—Ç–æ—Ä–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ.
    """
    user_id = call.from_user.id
    
    # --- –ù–û–í–ê–Ø, –í–ê–ñ–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê ---
    # 1. –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ë–î
    user = await db.get_user(user_id)
    
    # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ–ª—É—á–∞–ª –ª–∏ –æ–Ω —É–∂–µ —Ç—Ä–∏–∞–ª
    if user and user.has_received_trial:
        await call.answer("–í—ã —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ —Å–≤–æ–π –ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥.", show_alert=True)
        # –ó–∞–º–µ–Ω—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        await call.message.edit_text(
            f"üëã –ü—Ä–∏–≤–µ—Ç, <b>{call.from_user.full_name}</b>!",
            reply_markup=main_menu_keyboard()
        )
        return # –ü—Ä–µ—Ä—ã–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏

    # --- –û—Å—Ç–∞–ª—å–Ω–∞—è –ª–æ–≥–∏–∫–∞ –æ—Å—Ç–∞–µ—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π ---
    # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ –∫–∞–Ω–∞–ª—ã
    is_subscribed = await check_subscription(bot, user_id)
    if is_subscribed:
        # –ï—Å–ª–∏ –ø–æ–¥–ø–∏—Å–∞–Ω, —Å—Ä–∞–∑—É –≤—ã–¥–∞–µ–º —Ç—Ä–∏–∞–ª
        await call.answer("–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–π–¥–µ–Ω–∞! –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥...", show_alert=True)
        await call.message.delete()
        await give_trial_subscription(user_id, bot, marzban, call.message.chat.id)
    else:
        # –ï—Å–ª–∏ –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–∞–Ω–∞–ª—ã
        channels = await db.get_all_channels()
        if not channels:
            logger.warning(f"User {user_id} is starting trial, but no channels are in DB. Giving trial immediately.")
            await call.answer("–ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥...", show_alert=True)
            await call.message.delete()
            await give_trial_subscription(user_id, bot, marzban, call.message.chat.id)
            return

        keyboard = channels_subscribe_keyboard(channels)
        await call.message.edit_text(
            "‚ùóÔ∏è <b>–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–±–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—à–∏ –∫–∞–Ω–∞–ª—ã.</b>\n\n"
            "–ü–æ—Å–ª–µ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É ¬´–ü—Ä–æ–≤–µ—Ä–∏—Ç—å¬ª –Ω–∏–∂–µ.",
            reply_markup=keyboard,
            disable_web_page_preview=True
        )

# --- –•–ï–ù–î–õ–ï–† –î–õ–Ø –ö–ù–û–ü–ö–ò –ü–†–û–í–ï–†–ö–ò ---
@trial_sub_router.callback_query(F.data == "check_subscription")
async def handle_check_subscription(call: CallbackQuery, bot: Bot, marzban: MarzClientCache):
    user_id = call.from_user.id
    
    user = await db.get_user(user_id)
    if user and user.has_received_trial:
        await call.answer("–í—ã —É–∂–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∏ —Å–≤–æ—é –ø–æ–¥–ø–∏—Å–∫—É.", show_alert=True)
        await call.message.delete()
        await call.message.answer("–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –≥–ª–∞–≤–Ω—ã–º –º–µ–Ω—é.", reply_markup=main_menu_keyboard())
        return

    is_subscribed = await check_subscription(bot, user_id)

    if is_subscribed:
        await call.answer("‚úÖ –û—Ç–ª–∏—á–Ω–æ! –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É. –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥...", show_alert=True)
        await call.message.delete()
        # --- –ò–ó–ú–ï–ù–ï–ù–ò–ï: –£–±–∏—Ä–∞–µ–º bot –∏–∑ –≤—ã–∑–æ–≤–∞ ---
        await give_trial_subscription(user_id=user_id, bot=bot, marzban=marzban, chat_id=call.message.chat.id)
    else:
        await call.answer("–í—ã –µ—â–µ –Ω–µ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –≤—Å–µ –∫–∞–Ω–∞–ª—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.", show_alert=True)