# tgbot/handlers/user/instruction.py (–ü–æ–ª–Ω–∞—è, –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)

from aiogram import Router, F, types
from aiogram.filters import Command
from aiogram.types import Message, CallbackQuery, InputFile, BufferedInputFile
from aiogram.utils.keyboard import InlineKeyboardBuilder

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
from tgbot.keyboards.inline import back_to_main_menu_keyboard
from loader import config, logger # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥, —á—Ç–æ–±—ã –≤–∑—è—Ç—å –æ—Ç—Ç—É–¥–∞ ID –≤–∏–¥–µ–æ

instruction_router = Router(name="instruction")

# --- 1. –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ —Å—Å—ã–ª–∫–∞–º–∏ –Ω–∞ –∫–ª–∏–µ–Ω—Ç—ã ---
def os_client_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å–æ —Å—Å—ã–ª–∫–∞–º–∏ –Ω–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç—ã –¥–ª—è VLESS."""
    builder = InlineKeyboardBuilder()
    builder.button(text="ü§ñ Android (V2RayTun)", url="https://play.google.com/store/apps/details?id=com.v2raytun.android")
    builder.button(text="üçè iOS (V2RayTun)", url="https://apps.apple.com/ru/app/v2raytun/id6476628951")
    builder.button(text="üíª Windows (NekoBox)", url="https://github.com/MatsuriDayo/nekobox/releases/latest")
    builder.button(text="üçé macOS (V2rayU)", url="https://github.com/yanue/V2rayU/releases/latest")
    builder.button(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_main_menu")
    builder.adjust(1) # –†–∞—Å–ø–æ–ª–∞–≥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –ø–æ –æ–¥–Ω–æ–π –≤ —Ä—è–¥
    return builder.as_markup()


# --- 2. –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ ---
async def show_instruction_message(event: types.Message | types.CallbackQuery):
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤–∏–¥–µ–æ –∏ —Ç–µ–∫—Å—Ç–æ–≤—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—é.
    """
    # ID –≤–∞—à–µ–≥–æ –≤–∏–¥–µ–æ-—Ñ–∞–π–ª–∞, –∫–æ—Ç–æ—Ä—ã–π –≤—ã –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≥—Ä—É–∑–∏–ª–∏
    # –õ—É—á—à–µ —Ö—Ä–∞–Ω–∏—Ç—å –µ–≥–æ –≤ .env –∏ –∑–∞–≥—Ä—É–∂–∞—Ç—å —á–µ—Ä–µ–∑ config
    VIDEO_FILE_ID = config.tg_bot.instruction_video_id # <-- –ù—É–∂–Ω–æ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–∏—Ç—å –≤ config.py
    
    # –ù–æ–≤—ã–π, —É–ø—Ä–æ—â–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
    text = (
        "üì≤ <b>–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—é (–ê–≤—Ç–æ-–∏–º–ø–æ—Ä—Ç)</b>\n\n"
        "1Ô∏è‚É£ <b>–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –ø—Ä–æ—Ñ–∏–ª—å</b>\n"
        "–û—Ç–∫—Ä–æ–π—Ç–µ —Ä–∞–∑–¥–µ–ª ¬´üë§ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å¬ª –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é.\n\n"
        "2Ô∏è‚É£ <b>–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É</b>\n"
        "–ü–æ–¥ QR-–∫–æ–¥–æ–º –∏ —Å—Å—ã–ª–∫–æ–π –Ω–∞–π–¥–∏—Ç–µ –∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É <b>¬´üì≤ –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–¥–ø–∏—Å–∫—É¬ª</b>.\n\n"
        "3Ô∏è‚É£ <b>–†–∞–∑—Ä–µ—à–∏—Ç–µ –æ—Ç–∫—Ä—ã—Ç–∏–µ</b>\n"
        "–í–∞—Å –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–∏—Ç –Ω–∞ –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü—É, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–µ–¥–ª–æ–∂–∏—Ç –æ—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ (V2RayTUN –∏–ª–∏ –¥—Ä—É–≥–æ–µ). –°–æ–≥–ª–∞—Å–∏—Ç–µ—Å—å.\n\n"
        "4Ô∏è‚É£ <b>–ü–æ–¥–∫–ª—é—á–∏—Ç–µ—Å—å</b>\n"
        "–ü–æ–¥–ø–∏—Å–∫–∞ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏! –û—Å—Ç–∞–ª–æ—Å—å —Ç–æ–ª—å–∫–æ –æ–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–µ—Ä–æ–≤ –∏ –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è.\n\n"
    )
    
    chat_id = event.from_user.id
    
    # --- –õ–æ–≥–∏–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ ---
    if isinstance(event, types.CallbackQuery):
        # –ï—Å–ª–∏ —ç—Ç–æ –∫–æ–ª–±—ç–∫, —Å–Ω–∞—á–∞–ª–∞ –Ω—É–∂–Ω–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –Ω–µ–≥–æ
        await event.answer()
        # –ò —É–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ —Å –≤–∏–¥–µ–æ
        try: await event.message.delete()
        except: pass
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ –ø–æ –µ–≥–æ file_id, –∞ —Ç–µ–∫—Å—Ç - –≤ –ø–æ–¥–ø–∏—Å–∏ (caption)
    try:
        if VIDEO_FILE_ID:
            await event.bot.send_video(
                chat_id=chat_id,
                video=VIDEO_FILE_ID,
                caption=text,
                reply_markup=os_client_keyboard()
            )
        else: # –ï—Å–ª–∏ –≤–∏–¥–µ–æ –Ω–µ –∑–∞–¥–∞–Ω–æ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç
            await event.bot.send_message(
                chat_id=chat_id,
                text=text + "\n\n<i>–í–∏–¥–µ–æ-–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è —Å–∫–æ—Ä–æ –ø–æ—è–≤–∏—Ç—Å—è.</i>",
                reply_markup=os_client_keyboard()
            )
    except Exception as e:
        logger.error(f"Failed to send instruction video: {e}")
        # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∏–¥–µ–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä, ID –Ω–µ–≤–µ—Ä–Ω—ã–π), —à–ª–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç
        await event.bot.send_message(chat_id=chat_id, text=text, reply_markup=os_client_keyboard())


# --- 3. –•–µ–Ω–¥–ª–µ—Ä—ã –¥–ª—è –∫–æ–º–∞–Ω–¥—ã –∏ –∫–Ω–æ–ø–∫–∏ ---
@instruction_router.message(Command("instruction"))
async def instruction_command_handler(message: types.Message):
    await show_instruction_message(message)

@instruction_router.callback_query(F.data == "instruction_info")
async def instruction_callback_handler(call: types.CallbackQuery):
    await show_instruction_message(call)