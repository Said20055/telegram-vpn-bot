# tgbot/handlers/user/instruction.py

from aiogram import Router, F, types
from aiogram.filters import Command
from aiogram.types import Message, CallbackQuery
from aiogram.utils.keyboard import InlineKeyboardBuilder

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
from tgbot.keyboards.inline import back_to_main_menu_keyboard

# –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Ä–æ—É—Ç–µ—Ä —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π
instruction_router = Router(name="instruction")


# --- 1. –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ —Å—Å—ã–ª–∫–∞–º–∏ –Ω–∞ –∫–ª–∏–µ–Ω—Ç—ã ---
def os_client_keyboard():
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å–æ —Å—Å—ã–ª–∫–∞–º–∏ –Ω–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç—ã –¥–ª—è VLESS.
    """
    builder = InlineKeyboardBuilder()
    # Windows: NekoBox - –º–æ—â–Ω—ã–π –∏ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –∫–ª–∏–µ–Ω—Ç
    builder.button(text="üíª Windows (NekoBox) –°–∫–∞—á–∞–µ—Ç—Å—è Zip-–∞—Ä—Ö–∏–≤", url="https://github.com/MatsuriDayo/nekoray/releases/download/4.0.1/nekoray-4.0.1-2024-12-12-windows64.zip")
    # Android: v2rayNG - —Å–∞–º—ã–π –ø–æ–ø—É–ª—è—Ä–Ω—ã–π –∏ —Å—Ç–∞–±–∏–ª—å–Ω—ã–π
    builder.button(text="ü§ñ Android (V2RayTun)", url="https://play.google.com/store/apps/details?id=com.v2raytun.android&pcampaignid=web_share")
    # iOS/iPadOS: Foxtrot –∏–ª–∏ Streisand - –æ–±–∞ –æ—Ç–ª–∏—á–Ω—ã–µ
    builder.button(text="üçè iOS (V2RayTun)", url="https://apps.apple.com/ru/app/v2raytun/id6476628951")
    
    # macOS: V2rayU - —Ö–æ—Ä–æ—à–∏–π –≤—ã–±–æ—Ä –¥–ª—è Mac
    builder.button(text="üçé macOS (V2rayU)", url="https://github.com/yanue/V2rayU/releases/latest")
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
    builder.button(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_main_menu")
    # –†–∞—Å–ø–æ–ª–∞–≥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –ø–æ –æ–¥–Ω–æ–π –≤ —Ä—è–¥ –¥–ª—è –ª—É—á—à–µ–π —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏
    builder.adjust(1)
    return builder.as_markup()


# --- 2. –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ ---
async def show_instruction_message(event: types.Message | types.CallbackQuery):
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—é.
    """
    text = (
        "üì≤ <b>–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—é (VLESS)</b>\n\n"
        "1Ô∏è‚É£ <b>–°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å—Å—ã–ª–∫—É</b>\n"
        "–í —Ä–∞–∑–¥–µ–ª–µ ¬´üë§ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å¬ª –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –≤–∞—à—É —Å—Å—ã–ª–∫—É –ø–æ–¥–ø–∏—Å–∫–∏, —á—Ç–æ–±—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –µ—ë.\n\n"
        "2Ô∏è‚É£ <b>–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ</b>\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à—É –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É –Ω–∏–∂–µ –∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.\n\n"
        "3Ô∏è‚É£ <b>–î–æ–±–∞–≤—å—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É</b>\n"
        "–í –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –Ω–∞–π–¥–∏—Ç–µ —Ä–∞–∑–¥–µ–ª ¬´–ü–æ–¥–ø–∏—Å–∫–∏¬ª (Subscriptions), –Ω–∞–∂–º–∏—Ç–µ '–î–æ–±–∞–≤–∏—Ç—å' (+) –∏ –≤—Å—Ç–∞–≤—å—Ç–µ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–Ω—É—é —Å—Å—ã–ª–∫—É.\n\n"
        "4Ô∏è‚É£ <b>–ü–æ–¥–∫–ª—é—á–∏—Ç–µ—Å—å</b>\n"
        "–ü–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –æ–±–Ω–æ–≤–∏—Ç–µ —Å–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–µ—Ä–æ–≤, –≤—ã–±–µ—Ä–∏—Ç–µ –ª—é–±–æ–π –∏–∑ –Ω–∏—Ö –∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è."
    )
    reply_markup = os_client_keyboard()

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–ª–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    if isinstance(event, types.CallbackQuery):
        await event.message.edit_text(text, reply_markup=reply_markup)
    else:
        await event.answer(text, reply_markup=reply_markup)


# --- 3. –•–µ–Ω–¥–ª–µ—Ä—ã –¥–ª—è –∫–æ–º–∞–Ω–¥—ã –∏ –∫–Ω–æ–ø–∫–∏ ---

# –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /instruction
@instruction_router.message(Command("instruction"))
async def instruction_command_handler(message: types.Message):
    await show_instruction_message(message)

# –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è" –∏–∑ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
# (callback_data –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å "instruction_info")
@instruction_router.callback_query(F.data == "instruction_info")
async def instruction_callback_handler(call: types.CallbackQuery):
    await call.answer()
    await show_instruction_message(call)